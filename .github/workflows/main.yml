# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on: workflow_dispatch


jobs:

  build-cpp-ubuntu:
    name: Build C++ libraries Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: arrow
          ref: testBuild
          submodules: recursive

      - name: Set up Python by actions/setup-python
        if: runner.arch == 'X64'
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: 3.8
      - name: Set up Python by apt
        if: runner.os == 'Linux' && runner.arch != 'X64'
        run: |
          sudo apt update
          sudo apt-get install -y python3-pip
          pip install -U pip
          echo "$HOME/.local/bin" >>"$GITHUB_PATH"
      - name: Install Archery
        shell: bash
        run: pip install -e arrow/dev/archery[all]

      - name: Free up disk space
        run: |
            df -h
            sudo rm -rf /opt/hostedtoolcache/CodeQL || :
            df -h
      - name: Build C++ libraries
        # env:
        #   AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        #   AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        #   SCCACHE_BUCKET: "${{ secrets.SCCACHE_BUCKET }}"
        #   SCCACHE_REGION: "${{ secrets.SCCACHE_REGION }}"
        #   SCCACHE_S3_KEY_PREFIX: "sccache"

        run: |
          archery docker run \
            -e ARROW_JAVA_BUILD=OFF \
            -e ARROW_JAVA_TEST=OFF \
            java-jni-manylinux-2014
      - name: Compress into single artifact to keep directory structure
        run: tar -cvzf arrow-shared-libs-linux.tar.gz arrow/java-dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-shared-lib
          path: arrow-shared-libs-linux.tar.gz

  

  package-jars:
    name: Build jar files
    runs-on: macos-latest
    needs:
      - build-cpp-ubuntu
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: arrow
          ref: testBuild
          submodules: recursive

      - name: Download Libraries
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Decompress artifacts
        run: |
          mv artifacts/*/*.tar.gz .
          tar -xvzf arrow-shared-libs-linux.tar.gz
          # tar -xvzf arrow-shared-libs-macos-x86_64.tar.gz
          # tar -xvzf arrow-shared-libs-windows.tar.gz
      - name: Test that shared libraries exist
        run: |
          set -x
          test -f arrow/java-dist/x86_64/libarrow_cdata_jni.so
          test -f arrow/java-dist/x86_64/libarrow_dataset_jni.so
          test -f arrow/java-dist/x86_64/libarrow_orc_jni.so
          test -f arrow/java-dist/x86_64/libgandiva_jni.so
          # test -f arrow/java-dist/x86_64/libarrow_cdata_jni.dylib
          # test -f arrow/java-dist/x86_64/libarrow_dataset_jni.dylib
          # test -f arrow/java-dist/x86_64/libarrow_orc_jni.dylib
          # test -f arrow/java-dist/x86_64/libgandiva_jni.dylib
          # test -f arrow/java-dist/x86_64/arrow_cdata_jni.dll
          # test -f arrow/java-dist/x86_64/arrow_dataset_jni.dll
          # test -f arrow/java-dist/x86_64/arrow_orc_jni.dll
      - name: Build bundled jar
        run: |
          set -e
          pushd arrow/java
          mvn versions:set -DnewVersion=12.0.1-SNAPSHOT
          popd
          arrow/ci/scripts/java_full_build.sh \
            $GITHUB_WORKSPACE/arrow \
            $GITHUB_WORKSPACE/arrow/java-dist
      # - name: Set up Python by actions/setup-python
      #   if: runner.arch == 'X64'
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: 3.8
      # - name: Set up Python by apt
      #   if: runner.os == 'Linux' && runner.arch != 'X64'
      #   run: |
      #     sudo apt update
      #     sudo apt install -y \
      #       libgit2-dev \
      #       libpython3-dev \
      #       python3-pip
      #     sudo python3 -m pip install --upgrade pip
      # - name: Checkout Crossbow
      #   uses: actions/checkout@v3
      #   with:
      #     path: crossbow
      #     ref: nightly-9
      # - name: Setup Crossbow
      #   shell: bash
      #   run: |
      #     python3 -m pip install -e arrow/dev/archery[crossbow]
      #     echo "$HOME/.local/bin" >> $GITHUB_PATH
      # - name: Upload artifacts
      #   shell: bash
      #   run: |
      #     archery crossbow \
      #       --queue-path $(pwd)/crossbow \
      #       --queue-remote https://github.com/DenisTarasyuk/arrow-build \
      #       upload-artifacts \
      #       --sha nightly-10-github-java-jars \
      #       --tag nightly-10-github-java-jars \
      #       "arrow/java-dist/*.jar" \
      #       "arrow/java-dist/*.json" \
      #       "arrow/java-dist/*.pom" \
      #       "arrow/java-dist/*.xml" \
      #       "arrow/java-dist/*.zip" 
      #   env:
      #     CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
      # - name: Verify uploaded artifacts
      #   shell: bash
      #   run: |
      #     archery crossbow \
      #       --queue-path $(pwd)/crossbow \
      #       --queue-remote https://github.com/DenisTarasyuk/arrow-build \
      #       status \
      #       --task-filter 'java-jars' \
      #       --no-fetch \
      #       --validate \
      #       nightly-9
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
